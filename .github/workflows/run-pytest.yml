name: Run Unit Tests

on:
  # trigger on pull requests
  pull_request:

  # trigger on all commits to main
  push:
    branches:
      - 'main'

  # trigger on request
  workflow_dispatch:
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          # Defaults to newest dependencies
          - dependencies: 'newest'
          # Other tests
          # TODO: Add oldest supported dependencies to test
          # - python: '3.8'
          #   dependencies: 'oldest'
          # - os: 'macos-latest'
          #   python: '3.8'
          #   dependencies: 'oldest'
          - os: 'macos-latest'
            python: '3.12'
            dependencies: 'newest'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: "recursive"
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.config.python }}
    - name: Update pip/build packages
      run: |
        pip install setuptools --upgrade
        pip install pip --upgrade
    - name: Install newest dependencies
      run: |
        pip install -r requirements/requirements-test.txt
        pip install -r requirements/requirements-data.txt
        pip install -r requirements/requirements-jit.txt
      if: ${{ matrix.config.dependencies == 'newest' }}
    - name: Install the package
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest --cov=dupin --cov-config=pyproject.toml --cov-report=xml tests -v
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
